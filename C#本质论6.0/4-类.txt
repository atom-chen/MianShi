1.在C#里应该把new理解成实例化对象而不是分配内存，而且C#不需要delete操作符，因为内存分配和回收都是由"运行时"来完成的。
new操作符返回一个引用，指向实例化好的对象。

2.构造器，即构造函数。既在声明时赋值又在构造器内赋值，最终构造器会覆盖声明时的赋值。
静态构造器，用于对类而非类的实例进行初始化，静态构造器不能显式调用，而是“运行时”在首次访问类时自动调用静态构造函数。同样，它会优先于声明时的赋值。
default，default操作符提供任意类型的默认值。

3.静态成员，C#没有全局变量或全局函数，C#的所有字段和方法都在类的上下文中。在C#中，与全局字段等价的是静态字段或方法。

4.静态类，用static修饰，不包含任何实例字段和实例方法，例如，数学类。
静态类的特点是C#编译器自动在CIL代码中把它标记为abstract和sealed，意思是这个类不能被派生。

5.数据封装---字段修饰符
const和readonly
const：const字段包含在编译时确定的值，它不可以在运行时改变。常量字段自动成为静态字段，因为不需要为每个对象实例都生成新的字段实例，所有类的实例共用一个常量值。但是，将常量字段显式声明为static会造成编译错误。

readonly字段：只能在构造器内修改，或者在声明时通过初始化器修改。
每个实例的readonly字段的值可以是不同的，而且可以在运行时，在构造器内修改。