1.渲染（图形学）知识，性能优化，算法（我依然很差，直到现在），设计模式，数据管理（有一家公司问我整个游戏的数据怎么管理，数据系统怎么设计，我当时硬着头皮说了一点，被问得哑口无言，然后放弃了）。

2.数组，ArrayList，List，字典特点都比较了一通，大概没什么问题，他只是嗯了几声。但我没说哈希表，因为我不怎么熟悉。但面试官不肯放过这个点，他问，那哈希表呢？我试图按自己的理解从表层扯一些，以表示我是用过它的，有去了解过它的。扯了几句，我发现我实在扯不下去，我说哈希表我还不是很理解。

3.他问我：摄像机消耗什么？What?我近视，没听清。摄像机消耗什么？呃，这个，消耗什么呢？不知道，真不知道，没想过啊。停顿了片刻，我说这个我不知道。最后就回到C#的问题上，拆箱装箱，把过程原理说一下。嗯，装箱拆箱就是一个类型强制转换的过程，我把值类型在堆栈中存储怎么转成托管堆里存储的引用类型，引用怎么转成值类型，引用类型的引用类型（就是引用类型里面的变量还是引用类型）怎么转换成引用类型等说了一下，好像问题也不太。好家伙，他问我，如果C#没有提供强制类型转换，你怎么自己去实现它？这个，问得我哑口无言，以前想都没想过。然后问我协程是怎么实现的，如何用纯C#怎么实现协程。协程，我只会用啊，我哪想过它是怎么实现的啊。

4.C#（GC，装拆箱，ref/out，容器，迭代器），Lua（元表，面向对象），算法，数据结构，渲染（流程），性能优化。

5.U3D 的一些深入的概念，比如优化内存，drawcall，光照系统，assetbundle包，资源加载，动画系统，GUI系统，还会深入的考察C#，LUA的开发的情况。

6.然后我会就着你的简历详细剖析你所做的工作，你说你做过寻路，那我问你A*算法原理怎样的，和navmesh有什么区别，A*在大型地图怎样优化，如果你答不出来，那我不认为你真正的做过寻路，你只是使用过工具而已，那知识不属于你，这一项经验我会清0，你做过战斗，那我会问怎样同步前后端的状态，怎样避免延迟导致的问题，怎样能够更好的表现打击感。