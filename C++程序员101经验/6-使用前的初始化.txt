1.确保每个对象在使用前已经被初始化

2.为内置类型对象进行手动初始化
构造函数最好使用成员初始化列表，而不是在构造函数本体内使用赋值操作。
初始化列表的效率要比构造函数赋值要高
类的const成员、引用成员、static成员和类成员均不能在类的构造函数体内进行初始化。

3.  C++ 类初始化列表的成员初始化顺序是：C++ 初始化类成员时是按照成员声明的顺序初始化的，而不是根据初始化列表的出现顺序；
所以当我们给n1初始化时，n1的结果值是不可预料的。所以为了避免这种情况发生，我们最好根据成员变量声明的顺序进行初始化；
b.当C++类中包含const成员或者引用类型成员时，那么只能对这些类型初始化，而不能赋值；初始化是构造类的时候进行的，赋值是构造类结束后，调用类的方法或者进入类体中进行的。

4.明确区分初时化跟赋值的区别. c++对象的初始化顺序是:基类初始化、对象成员初时化、构造函数的赋值语句

5.析构函数的顺序则刚好是调过来, 构造/析构顺序可看作是一种栈的顺序