1.基本概念
A.TCP是面向连接的，意思是说两个远程主机（或者叫进程，因为实际上远程通信是进程之间的通信，而进程则是运行中的程序），必须首先进行一个握手过程，确认连接成功，之后才能传输实际的数据。比如说进程A想将字符串“It's a fine day today”发给进程B，它首先要建立连接。

B.关于TCP第二个需要了解的，就是它是全双工的。意思是说如果两个主机上的进程（比如进程A、进程B），一旦建立好连接，那么数据就既可以由A流向B，也可以由B流向A。除此以外，它还是点对点的，意思是说一个TCP连接总是两者之间的，在发送中，通过一个连接将数据发给多个接收方是不可能的。TCP还有一个特性，就是称为可靠的数据传输，意思是连接建立后，数据的发送一定能够到达，并且是有序的，就是说发的时候你发了ABC，那么收的一方收到的也一定是ABC，而不会是BCA或者别的什么。

C.编程中与TCP相关的最重要的一个概念就是套接字。我们应该知道网络七层协议，如果我们将上面的应用程、表示层、会话层笼统地算作一层（有的教材便是如此划分的），那么我们编写的网络应用程序就位于应用层，而大家知道TCP是属于传输层的协议，那么我们在应用层如何使用传输层的服务呢（消息发送或者文件上传下载）？大家知道在应用程序中我们用接口来分离实现，在应用层和传输层之间，则是使用套接字来进行分离。它就像是传输层为应用层开的一个小口，应用程序通过这个小口向远程发送数据，或者接收远程发来的数据；而这个小口以内，也就是数据进入这个口之后，或者数据从这个口出来之前，我们是不知道也不需要知道的，我们也不会关心它如何传输，这属于网络其它层次的工作。
举个例子，如果你想写封邮件发给远方的朋友，那么你如何写信、将信打包，属于应用层，信怎么写，怎么打包完全由我们做主；而当我们将信投入邮筒时，邮筒的那个口就是套接字，在进入套接字之后，就是传输层、网络层等（邮局、公路交管或者航线等）其它层次的工作了。我们从来不会去关心信是如何从西安发往北京的，我们只知道写好了投入邮筒就OK了。

D.实际上套接字包含的最重要的也就是两个信息：连接至远程的本地的端口信息(本机地址和端口号)，连接到的远程的端口信息(远程地址和端口号)。
端口:一般来说我们的计算机上运行着非常多的应用程序，它们可能都需要同远程主机打交道，所以远程主机就需要有一个ID来标识它想与本地机器上的哪个应用程序打交道，这里的ID就是端口。将端口分配给一个应用程序，那么来自这个端口的数据则总是针对这个应用程序的。有这样一个很好的例子：可以将主机地址想象为电话号码，而将端口号想象为分机号。

