1.C和C++中结构体的区别
（1）多态：C的结构体内不允许有函数存在，但是有默认的构造函数，就是把所有的成员属性设置为0，不能自定义。但是C的结构体是没有构造函数、析构函数、和this指针的，所以没有多态而言；C++允许有内部成员函数，且允许该函数是虚函数可以多态。
（2）继承：C语言的结构体是不可以继承的，C++的结构体是可以从其他的结构体或者类继承过来的，和类一样，实现了代码的复用。
（3）封装：C的结构体只是把数据变量给包裹起来了，并不涉及算法，是一种“复合类型”，其功能基本与int ，double的用法相同，它主要解决多类型问题。而C++中是把数据变量及对这些数据变量的相关算法给封装起来，并且给对这些数据和类不同的访问权限。
（4）访问权限：C的结构体对内部成员变量的访问权限只能是public，而C++允许public,protected,private三种。
  以上三点都是表面的区别，实际区别就是面向过程和面向对象编程思路的区别。


2.C++的结构体和C++类的区别，语法层面
 主要是访问权限的区别：
（1）C++结构体内部成员变量及成员函数默认的访问级别是public,而c++类的内部成员变量及成员函数的默认访问级别是private。
（2） C++结构体的继承默认是public，而c++类的继承默认是private。


3.C/C++底层以及意义的区别
1)结构体是一种值类型，而类是引用类型。值类型用于存储数据的值，引用类型用于存储对实际数据的引用。
那么结构体就是当成值来使用的，类则通过引用来对实际数据操作。

2)结构使用栈存储（Stack Allocation），而类使用堆存储（Heap Allocation)
栈的空间相对较小.但是存储在栈中的数据访问效率相对较高.
堆的空间相对较大.但是存储在堆中的数据的访问效率相对较低.

3)类是反映现实事物的一种抽象，而结构体的作用只是一种包含了具体不同类别数据的一种包装，结构体不具备类的继承多态特性

4)结构体赋值是直接赋值的值, 而对象的指针赋值的是对象的地址



5.如何选择结构还是类

1)堆栈的空间有限，对于大量的逻辑的对象，创建类要比创建结构好一些
2)结构表示如点、矩形和颜色这样的轻量对象，例如，如果声明一个含有 1000 个点对象的数组，则将为引用每个对象分配附加的内存。在此情况下，结构的成本较低。
3)在表现抽象和多级别的对象层次时，类是最好的选择
4)大多数情况下该类型只是一些数据时，结构时最佳的选择