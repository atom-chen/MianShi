一、中断的引入
中断是指计算机在执行期间，系统内发生任何非寻常的或非预期的急需处理事件，使得CPU暂时中断当前正在执行的程序而转去执行相应的事件处理程序，待处理完毕后又返回原来被中断处继续执行或调度新的进程执行的过程。

中断引入的目的：就是为了I/O和CPU可以并行，从而实现多道程序设计。


二、异常（陷入）的引入
    当下述情况发生，CPU中断当前的执行流程，转到相应的错误处理程序或陷入处理程序：
CPU执行指令时本身出现算术异常、零做除数、访存指令越界、虚存缺页等；
正常异常，即执行了一条trap指令，用于实现系统调用


三、中断和异常的区分
1、中断：通道（或设备）完成输入输出后，通道会“通知”CPU此次输入输出结束，这个“通知”就是中断。
可以看到，中断与CPU正在执行的指令并没有关系。

2、异常：而异常则是正在执行的指令本身出现了错误（如算术溢出、地址越界）等。

3、但中断和异常的结果都是使得“CPU暂停正在执行的程序”：
   CPU接受“中断”后停止当前的任务，去继续上一个任务或继续当时在执行的任务（如何选择则是与调度有关）。
   CPU接受“异常”后停止当前任务，去处理这些错误。 处理完成后CPU返回暂停点继续工作。

4、中断：与正在执行的指令无关，可以屏蔽
   异常：与正在执行的指令有关，不可屏蔽

5、中断经常和异常联系起来，实际上它们都是程序执行过程中的强制性转移，转移到处理程序。不管中断还是异常，都是
软件或者硬件发生了某种情形而通知处理器的行为。